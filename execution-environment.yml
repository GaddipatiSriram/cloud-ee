---
version: 3

dependencies:
  galaxy: requirements.yml
  python: requirements.txt
  system: bindep.txt
  ansible_core:
    package_pip: ansible-core==2.16.0
  ansible_runner:
    package_pip: ansible-runner==2.3.4
  python_interpreter:
    package_system: "python3.11"
    python_path: "/usr/bin/python3.11"

images:
  base_image:
    name: registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8:latest

options:
  package_manager_path: /usr/bin/microdnf

additional_build_files:
  - src: ansible.cfg
    dest: configs

additional_build_steps:
  append_base: |
    RUN echo "Target architecture is: $TARGETARCH"

    # Configure Terraform Repo
    RUN curl -o /etc/yum.repos.d/hashicorp.repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo

  prepend_galaxy: |
    COPY _build/configs/ansible.cfg /etc/ansible/ansible.cfg
    ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_URL=https://console.redhat.com/api/automation-hub/content/published/
    ENV ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_AUTH_URL=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    ARG ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN

  append_final: |
    # Use Python 3.11 as default
    RUN rm -f /bin/python3
    RUN ln -s /bin/python3.11 /bin/python3

    # Install AWS CLI
    RUN if [ $TARGETARCH == "arm64" ]; then curl -L "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "/tmp/awscliv2.zip"; else curl -L "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"; fi
    RUN unzip /tmp/awscliv2.zip -d /tmp/
    RUN chmod 755 /tmp/aws/install
    RUN /tmp/aws/install
    RUN rm -rf /tmp/*

    # Output collections list for debugging
    RUN ansible-galaxy collection list
